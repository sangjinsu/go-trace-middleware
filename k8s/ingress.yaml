apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trace-ingress
  namespace: trace-system
  labels:
    app: trace
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  ingressClassName: nginx
  rules:
    - host: trace.example.com # 실제 도메인으로 변경
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trace-service
                port:
                  number: 80
    - host: api.trace.example.com # API 서브도메인
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trace-service
                port:
                  number: 80
---
# TLS 인증서가 있는 경우
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trace-ingress-tls
  namespace: trace-system
  labels:
    app: trace
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - trace.example.com
        - api.trace.example.com
      secretName: trace-tls
  rules:
    - host: trace.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trace-service
                port:
                  number: 80
    - host: api.trace.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trace-service
                port:
                  number: 80
