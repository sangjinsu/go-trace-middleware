version: "3.8"

services:
  trace-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trace-app
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    volumes:
      # SQLite 데이터베이스 파일을 호스트와 공유
      - ./data:/app/data
      # 로그 파일을 호스트와 공유
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/stats",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trace-network

  # 개발용 서비스 (선택사항)
  trace-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trace-app-dev
    ports:
      - "8081:8080"
    environment:
      - GIN_MODE=debug
    volumes:
      # 소스 코드를 볼륨으로 마운트하여 개발 시 실시간 반영
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - trace-network

  # PostgreSQL 서비스 (선택사항)
  postgres:
    image: postgres:15-alpine
    container_name: trace-postgres
    environment:
      POSTGRES_DB: trace_db
      POSTGRES_USER: trace_user
      POSTGRES_PASSWORD: trace_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - postgres
    networks:
      - trace-network

  # Redis 서비스 (선택사항 - 향후 확장용)
  redis:
    image: redis:7-alpine
    container_name: trace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis
    networks:
      - trace-network

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: trace-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - trace-app
    restart: unless-stopped
    profiles:
      - nginx
    networks:
      - trace-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  trace-network:
    driver: bridge
